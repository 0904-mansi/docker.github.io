@define-mixin vertical-align $height, $parent_height {
  & {
    margin-top: calc(($height - $parent_height) / 2);
    margin-bottom: calc(($height - $parent_height) / 2);
  }
}

@define-mixin storeIcon {
  width: $icon-size-store;
  height: $icon-size-store;
  border-radius: $corner-size;
}

@define-mixin flexCentered {
  display: flex;
  justify-content: center;
  align-items: center;
}

@define-mixin semiBold {
  font-weight: 600;
}

@define-mixin square $size {
  & {
    width: $size;
    height: $size;
  }
}

@define-mixin clearfix {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}

@define-mixin wrapped {
  margin: 0 auto;
  width: 100%;
  max-width: $wrapped-max-width;
  padding-left: $wrapped-gutter;
  padding-right: $wrapped-gutter;
  flex: 1 auto;
}

@define-mixin listUnstyled {
  list-style: none;
  padding: 0;
}

@define-mixin linkUnstyled {
  text-decoration: none;
  color: inherit;
  &:visited {
    color: inherit;
  }
}

/* https://goo.gl/Mus6xj */
@define-mixin hideText {
  font: ~"0/0" a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

@define-mixin hide {
  display: none !important;
}

/* Font sizes */
@define-mixin fontSize $n {
  font-size: $font-size-$(n);
  line-height: $line-height-$(n);
  font-weight: 400;
  letter-spacing: normal;
}

@define-mixin display4 {
  font-size: $font-size-display-4;
  line-height: $line-height-display-4;
  font-weight: 300;
  letter-spacing: -0.01em;
}

@define-mixin display3 {
  font-size: $font-size-display-3;
  line-height: $line-height-display-3;
  font-weight: 400;
  letter-spacing: -0.005em;
}

@define-mixin display2 {
  font-size: $font-size-display-2;
  line-height: $line-height-display-2;
  font-weight: 400;
}

@define-mixin display1 {
  font-size: $font-size-display-1;
  line-height: $line-height-display-1;
  font-weight: 700;
}

@define-mixin headline {
  font-size: $font-size-headline;
  line-height: $line-height-headline;
  font-weight: 400;
}

@define-mixin title {
  font-size: $font-size-title;
  line-height: $line-height-title;
  font-weight: 500;
  letter-spacing: 0.005em;
}

@define-mixin subhead {
  font-size: $font-size-subhead;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: $line-height-subhead;
}

@define-mixin shyHeader {
  @mixin fontSize 1;
  font-weight: bolder;
  color: $color-loblolly;
}

@define-mixin tableHeader {
  font-size: $font-size-1;
  line-height: $line-height-1;
  letter-spacing: normal;
  font-weight: bolder;
  color: $color-loblolly;
}

/* columns */
@define-mixin 6columns $1, $2, $3, $4, $5, $6 {
  lost-flex-container: row;
  flex-wrap: nowrap;

  & > * {
    lost-column-cycle: 6;

    &:nth-child(1) {
      lost-column: $1/12 flex;
    }

    &:nth-child(2) {
      lost-column: $2/12 flex;
    }

    &:nth-child(3) {
      lost-column: $3/12 flex;
    }

    &:nth-child(4) {
      lost-column: $4/12 flex;
    }

    &:nth-child(5) {
      lost-column: $5/12 flex;
    }
    &:nth-child(6) {
      lost-column: $6/12 flex;
    }
  }
}

@define-mixin 5columns $1, $2, $3, $4, $5 {
  lost-flex-container: row;
  flex-wrap: nowrap;

  & > * {
    lost-column-cycle: 5;

    &:nth-child(1) {
      lost-column: $1/12 flex;
    }

    &:nth-child(2) {
      lost-column: $2/12 flex;
    }

    &:nth-child(3) {
      lost-column: $3/12 flex;
    }

    &:nth-child(4) {
      lost-column: $4/12 flex;
    }

    &:nth-child(5) {
      lost-column: $5/12 flex;
    }
  }
}

@define-mixin 4columns $1, $2, $3, $4 {
  lost-flex-container: row;
  flex-wrap: nowrap;

  & > * {
    lost-column-cycle: 4;

    &:nth-child(1) {
      lost-column: $1/12 flex;
    }

    &:nth-child(2) {
      lost-column: $2/12 flex;
    }

    &:nth-child(3) {
      lost-column: $3/12 flex;
    }

    &:nth-child(4) {
      lost-column: $4/12 flex;
    }
  }
}

@define-mixin 3columns $1, $2, $3 {
  lost-flex-container: row;
  flex-wrap: nowrap;

  & > * {
    lost-column-cycle: 3;

    &:nth-child(1) {
      lost-column: $1/12 flex;
    }

    &:nth-child(2) {
      lost-column: $2/12 flex;
    }

    &:nth-child(3) {
      lost-column: $3/12 flex;
    }
  }
}

/* Three equal columns */
@define-mixin 3columnsResponsive {
  lost-flex-container: row;
  & > * {
    lost-column: 1;
  }

  @media (min-width: $screen-sm) {
    & > * {
      lost-column: 1/2;
    }
  }

  @media (min-width: $screen-md) {
    & > * {
      lost-column: 1/3;
    }
  }
}

@define-mixin 2columnsResponsive $1, $2 {
  lost-flex-container: row;
  & > * {
    lost-column: 1;
  }

  @media (min-width: $screen-md) {
    & > * {
      lost-column-cycle: 2;

      &:nth-child(1) {
        lost-column: $1/12 flex;
      }

      &:nth-child(2) {
        lost-column: $2/12 flex;
      }
    }
  }

}

@define-mixin 2columns $1, $2 {
  lost-flex-container: row;
  flex-wrap: nowrap;

  & > * {
    lost-column-cycle: 2;

    &:nth-child(1) {
      lost-column: $1/12 flex;
    }

    &:nth-child(2) {
      lost-column: $2/12 flex;
    }
  }
}

/* Rows */

/* TODO:  Use flex. Flexbox doesn't seem to work on iOS safari/chrome
          when overriding a lost column for small devices (?)(Registration page)
*/
@define-mixin 2rows {
  lost-container: column;

  & > * {
    &:nth-child(1) {
      lost-row: 6/12;
    }

    &:nth-child(2) {
      lost-row: 6/12;
    }
  }
}

@define-mixin 3rows {
  lost-container: column;

  & > * {
    &:nth-child(1) {
      lost-row: 4/12;
    }

    &:nth-child(2) {
      lost-row: 4/12;
    }

    &:nth-child(3) {
      lost-row: 4/12;
    }
  }
}
